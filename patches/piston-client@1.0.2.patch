diff --git a/node_modules/piston-client/.bun-tag-4423e83a48741f05 b/.bun-tag-4423e83a48741f05
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/node_modules/piston-client/.bun-tag-8021084aa83cf7d7 b/.bun-tag-8021084aa83cf7d7
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/node_modules/piston-client/index.d.ts b/index.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..55f3e3b6860db34b2719cb7fd4869a2b6a9b072e
--- /dev/null
+++ b/index.d.ts
@@ -0,0 +1,44 @@
+export default function piston({ server: string }?): PistonClient
+
+export interface PistonClient {
+  runtimes(): Promise<Result | Runtime[]>;
+
+  execute(language: language | string, code: string, options?: ExecutionOptions): Promise<Result | ExecutionResult>;
+}
+
+export interface ExecutionResult {
+  language: language;
+  version: string;
+  run: {
+    stdout: string;
+    stderr: string;
+    code: number;
+    signal: any;
+    output: string
+  }
+}
+
+export interface ExecutionOptions {
+  language?: language;
+  version?: string;
+  files?: {
+    name: string;
+    content: string;
+  }[]
+  stdin?: string;
+  args?: string[];
+  compile_timeout?: number;
+  run_timeout?: number;
+  compile_memory_limit?: number;
+  run_memory_limit?: number;
+}
+
+export interface Runtime {
+  language: language;
+  version: string;
+  aliases: string[]
+}
+
+export type Result = any | { error: any, success: boolean } | undefined;
+
+export type language = "awk" | "bash" | "befunge93" | "brachylog" | "brainfuck" | "bqn" | "c" | "c++" | "cjam" | "clojure" | "cobol" | "coffeescript" | "cow" | "crystal" | "csharp" | "csharp.net" | "d" | "dart" | "dash" | "dragon" | "elixir" | "emacs" | "emojicode" | "erlang" | "file" | "forte" | "forth" | "fortran" | "freebasic" | "fsharp.net" | "fsi" | "go" | "golfscript" | "groovy" | "haskell" | "husk" | "iverilog" | "japt" | "java" | "javascript" | "jelly" | "julia" | "kotlin" | "lisp" | "llvm_ir" | "lolcode" | "lua" | "matl" | "nasm" | "nasm64" | "nim" | "ocaml" | "octave" | "osabie" | "paradoc" | "pascal" | "perl" | "php" | "ponylang" | "powershell" | "prolog" | "pure" | "pyth" | "python" | "python2" | "racket" | "raku" | "retina" | "rockstar" | "rscript" | "ruby" | "rust" | "samarium" | "scala" | "smalltalk" | "sqlite3" | "swift" | "typescript" | "basic" | "basic.net" | "vlang" | "vyxal" | "yeethon" | "zig";
\ No newline at end of file
diff --git a/lib/get.js b/lib/get.js
index ddad9b1662d0487fee6c9ad908f88a0a106b92d7..beac0774b3285a88a4e53ce349d40a6f04386e55 100644
--- a/lib/get.js
+++ b/lib/get.js
@@ -1,5 +1,3 @@
-import fetch from "node-fetch";
-
 export const get = async (url) => {
   try {
     const res = await fetch(url);
diff --git a/lib/post.js b/lib/post.js
index 19f75d73708b9f7c3cc98f3a8e81d5f987f011f7..f28ec855084ef29ed085496e06feb6a3483d7ab9 100644
--- a/lib/post.js
+++ b/lib/post.js
@@ -1,10 +1,11 @@
-import fetch from "node-fetch";
-
 export const post = async (url, body) => {
   try {
     const res = await fetch(url, {
       method: 'POST',
-      body: JSON.stringify(body)
+      body: JSON.stringify(body),
+      headers: {
+        'Content-Type': "application/json"
+      }
     });
     return await res.json();
   } catch(e) {
diff --git a/package.json b/package.json
index 5ffa394b7ce5947b0993f47fbe46853e46a2b5fb..964b829f7261a136636cca0f2b4361e04e6e2505 100644
--- a/package.json
+++ b/package.json
@@ -4,6 +4,7 @@
   "version": "1.0.2",
   "description": "Client wrapper for the Piston API.",
   "main": "index.js",
+  "types": "index.d.ts",
   "scripts": {
     "dev": "nodemon index.js",
     "test": "echo \"Error: no test specified\" && exit 1"
@@ -13,9 +14,6 @@
   ],
   "author": "dthree",
   "license": "MIT",
-  "dependencies": {
-    "node-fetch": "^2.6.1"
-  },
   "directories": {
     "lib": "lib"
   },
